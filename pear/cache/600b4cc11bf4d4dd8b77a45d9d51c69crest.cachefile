a:8:{s:7:"attribs";a:4:{s:5:"xmlns";s:36:"http://pear.php.net/dtd/rest.package";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:11:"xmlns:xlink";s:28:"http://www.w3.org/1999/xlink";s:18:"xsi:schemaLocation";s:80:"http://pear.php.net/dtd/rest.package    http://pear.php.net/dtd/rest.package.xsd";}s:1:"n";s:7:"PHP_UML";s:1:"c";s:12:"pear.php.net";s:2:"ca";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:11:"/rest/c/PHP";}s:8:"_content";s:3:"PHP";}s:1:"l";s:4:"LGPL";s:1:"s";s:141:"A reverse-engineering package that scans PHP files and directories, and delivers an UML/XMI representation of the classes and packages found.";s:1:"d";s:1246:"PHP_UML is a PHP parser, an XMI generator and a documentation tool.
Practically, with PHP_UML, you will be able to feed a UML CASE tool, like Rational Rose or Argouml, with a UML representation of existing PHP source code. This way, you get an instant overview of a PHP application, with all the usual functions of a software design tool (such as class diagrams exportation, refactoring of object-oriented applications, or automatic code generation).

PHP_UML:
- Can generate UML/XMI files in version 1.4, or in version 2.1 (logical, component, and deployment views)
- Can generate an API documentation in HTML format
- Can generate PHP code (code skeleton) from a given XMI file
- Can convert UML/XMI content from version 1.4 to version 2.1

PHP_UML:
- Parses object-oriented PHP code, in all versions (classes, interfaces, functions, properties...)
- From version 1.5, PHP_UML can also parse procedural code (functions and constants). See the "htmlnew" exportation format
- Interprets the PHP namespacing instructions (namespace and use)
- Parses comment docblocks: class (@package), function (@param, @return), property (@var) and header file comments (@package)
- Detects types (by parsing the type hints, and by analyzing the default values)";s:1:"r";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:15:"/rest/r/php_uml";}}}